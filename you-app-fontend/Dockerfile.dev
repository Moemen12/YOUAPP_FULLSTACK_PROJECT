# Use Node.js 18 Alpine image for a smaller footprint
FROM node:18-alpine AS base

# Install any needed system dependencies, such as libc6 for compatibility
RUN apk add --no-cache libc6-compat

# Set up working directory
WORKDIR /app

# Copy only package.json and lock files to install dependencies
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./

# Install dependencies (preferably use npm ci if you use npm)
RUN if [ -f yarn.lock ]; then yarn install; \
  elif [ -f package-lock.json ]; then npm install; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm install; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Copy the rest of your application code
COPY . .

# Expose the development port (adjust if needed)
EXPOSE 3000

# Set environment variables for development
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# Run the app in development mode (with hot-reloading for Next.js)
CMD ["npm", "run", "dev"]
